# SMEM Queries and Update statements. See org.jsoar.kernel.smem.SemanticMemoryDatabase.
begin = BEGIN
commit = COMMIT
rollback = ROLLBACK

#
var_get = SELECT value FROM smem2_vars WHERE id=?
var_set = REPLACE INTO smem2_vars (id,value) VALUES (?,?)

#
hash_rev_int = SELECT sym_const FROM smem2_symbols_int WHERE id=?
hash_rev_float = SELECT sym_const FROM smem2_symbols_float WHERE id=?
hash_rev_str = SELECT sym_const FROM smem2_symbols_str WHERE id=?
hash_get_int = SELECT id FROM smem2_symbols_int WHERE sym_const=?
hash_get_float = SELECT id FROM smem2_symbols_float WHERE sym_const=?
hash_get_str = SELECT id FROM smem2_symbols_str WHERE sym_const=?
hash_add_type = INSERT INTO smem2_symbols_type (sym_type) VALUES (?)
hash_add_int = INSERT INTO smem2_symbols_int (id,sym_const) VALUES (?,?)
hash_add_float = INSERT INTO smem2_symbols_float (id,sym_const) VALUES (?,?)
hash_add_str = INSERT INTO smem2_symbols_str (id,sym_const) VALUES (?,?)

#
lti_add = INSERT INTO smem2_lti (letter,num,child_ct,act_cycle) VALUES (?,?,?,?)
lti_get = SELECT id FROM smem2_lti WHERE letter=? AND num=?
lti_letter_num = SELECT letter, num FROM smem2_lti WHERE id=?
lti_max = SELECT letter, MAX(num) FROM smem2_lti GROUP BY letter

#
web_add = INSERT INTO smem2_web (parent_id, attr, val_const, val_lti, act_cycle) VALUES (?,?,?,?,?)
web_truncate = DELETE FROM smem2_web WHERE parent_id=?
web_expand = SELECT tsh_a.sym_type AS attr_type, tsh_a.id AS attr_hash,tsh_v.sym_type AS value_type, tsh_v.id AS value_hash, lti.letter AS value_letter, lti.num AS value_num, lti.id AS value_lti FROM ((smem2_web w LEFT JOIN smem2_symbols_type tsh_v ON w.val_const=tsh_v.id) LEFT JOIN smem2_lti AS lti ON w.val_lti=lti.id) INNER JOIN smem2_symbols_type tsh_a ON w.attr=tsh_a.id WHERE parent_id=?

#
web_attr_ct = SELECT attr, COUNT(*) AS ct FROM smem2_web WHERE parent_id=? GROUP BY attr
web_const_ct = SELECT attr, val_const, COUNT(*) AS ct FROM smem2_web WHERE parent_id=? AND val_const IS NOT NULL GROUP BY attr, val_const
web_lti_ct = SELECT attr, val_lti, COUNT(*) AS ct FROM smem2_web WHERE parent_id=? AND val_const IS NULL GROUP BY attr, val_const, val_lti

#
web_attr_all = SELECT parent_id, act_cycle FROM smem2_web w WHERE attr=? ORDER BY act_cycle DESC
web_const_all = SELECT parent_id, act_cycle FROM smem2_web w WHERE attr=? AND val_const=? AND val_lti IS NULL ORDER BY act_cycle DESC
web_lti_all = SELECT parent_id, act_cycle FROM smem2_web w WHERE attr=? AND val_const IS NULL AND val_lti=? ORDER BY act_cycle DESC

#
web_attr_child = SELECT parent_id FROM smem2_web WHERE parent_id=? AND attr=?
web_const_child = SELECT parent_id FROM smem2_web WHERE parent_id=? AND attr=? AND val_const=?
web_lti_child = SELECT parent_id FROM smem2_web WHERE parent_id=? AND attr=? AND val_const IS NULL AND val_lti=?

# SQLite
ct_attr_add = INSERT OR IGNORE INTO smem2_ct_attr (attr, ct) VALUES (?,0)
ct_const_add = INSERT OR IGNORE INTO smem2_ct_const (attr, val_const, ct) VALUES (?,?,0)
ct_lti_add = INSERT OR IGNORE INTO smem2_ct_lti (attr, val_lti, ct) VALUES (?,?,0)

# MySQL
#ct_attr_add = INSERT IGNORE INTO smem2_ct_attr (attr, ct) VALUES (?,0)
#ct_const_add = INSERT IGNORE INTO smem2_ct_const (attr, val_const, ct) VALUES (?,?,0)
#ct_lti_add = INSERT IGNORE INTO smem2_ct_lti (attr, val_lti, ct) VALUES (?,?,0)

#
ct_attr_update = UPDATE smem2_ct_attr SET ct = ct + ? WHERE attr=?
ct_const_update = UPDATE smem2_ct_const SET ct = ct + ? WHERE attr=? AND val_const=?
ct_lti_update = UPDATE smem2_ct_lti SET ct = ct + ? WHERE attr=? AND val_lti=?

#
ct_attr_get = SELECT ct FROM smem2_ct_attr WHERE attr=?
ct_const_get = SELECT ct FROM smem2_ct_const WHERE attr=? AND val_const=?
ct_lti_get = SELECT ct FROM smem2_ct_lti WHERE attr=? AND val_lti=?

#
act_set = UPDATE smem2_web SET act_cycle=? WHERE parent_id=?
act_lti_child_ct_get = SELECT child_ct FROM smem2_lti WHERE id=?
act_lti_child_ct_set = UPDATE smem2_lti SET child_ct=? WHERE id=?
act_lti_set = UPDATE smem2_lti SET act_cycle=? WHERE id=?
act_lti_get = SELECT act_cycle FROM smem2_lti WHERE id=?

#
vis_lti = SELECT id, letter, num FROM smem2_lti
vis_value_const = SELECT parent_id, tsh1.sym_type AS attr_type, tsh1.id AS attr_hash, tsh2.sym_type AS val_type, tsh2.id AS val_hash FROM smem2_web w, smem2_symbols_type tsh1, smem2_symbols_type tsh2 WHERE (w.attr=tsh1.id) AND (w.val_const=tsh2.id)
vis_value_lti = SELECT parent_id, tsh.sym_type AS attr_type, tsh.id AS attr_hash, val_lti FROM smem2_web w, smem2_symbols_type tsh WHERE (w.attr=tsh.id) AND (val_lti IS NOT NULL)

