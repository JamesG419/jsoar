# "\nLoading wander/get-item"

################################
### Propose get-item operator
################################

sp {wander*propose*get-item*in-room*weapon
   (state <s> ^name wander
              ^top-state.parameters <par>
              ^io.input-link.entity.item <item-x>)
   (<par> ^weapon <weap>
          ^close-weapon-range <cwr>)
   (<item-x> ^classname <cname>
             ^type weapon
             ^in-current-room true
   )#         -^range > <cwr>)
   (<weap> ^classname <cname>
           ^quality > 4)
   -->
   (<s> ^operator <o> + =)
   (<o> ^name get-item
        ^type weapon
        ^item <item-x>
        ^priority 7
        ^place in-room
        ^mode wander
        ^classname <cname>)
   }

sp {wander*propose*get-item*in-room*weapon*not-visible
   (state <s> ^name wander
              ^top-state.parameters.weapon <weap>
              ^current-room.item <item>
              ^io.input-link <il>)
   (<il> -^agent.weapon.classname <cname>
         -^entity.item.classname <cname>)
   (<item> ^type weapon
           ^classname <cname>)
   (<weap> ^classname <cname>
           ^quality > 4)
   -->
   (<s> ^operator <o> + =)
   (<o> ^name get-item
        ^type weapon
        ^item <item>
        ^priority 7
        ^place recorded-in-room
        ^mode wander
        ^classname <cname>)
   }

########### HACK

sp {get-item*elaborate*turn-off-face-target
:i-support
   (state <s> ^operator <o>
              ^io.input-link.feedback <fd>)
   (<fd> ^selecttarget.classname <> <cname>
         ^facetarget on)
   (<o> ^name get-item
        ^item <item>
        ^classname <cname>)
   -->
#   (write (crlf) |Turn off Face Target: | <item> |, | <cname>)
   (<o> ^actions.facetarget off)}

