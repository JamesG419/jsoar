sp {clean-house*propose*finished-cleaning
   (state <s> ^name robot
              ^parameters.delete-old-areas false
              ^current-mission <cm>
              ^objects <bs>
              ^parameters.objects-held-in wm
              ^parameters.areas-held-in wm
              ^areas <areas>
             -^io.input-link.self.carry)
   (<cm> ^type get-object
         ^object <object>)
   (<object> ^type <obj-type>
             ^color <color>)
  -{(<areas> ^area <area>)
    (<area> -^cleaned yes
            -^avoid true
            -^storage-area yes)}
  -{(<areas> ^area <area1>)
    (<area1> -^visited yes
            -^avoid true
            -^storage-area yes)}
  -{(<bs> ^object <b>)
    (<b> ^type <obj-type>
         ^color <color>
         ^in-storage-room no)}
-->
   (<s> ^operator <op> + =, >)
   (<op> ^name finished-cleaning)
}

sp {apply*finished-cleaning
   (state <s> ^operator <op>
              ^io.output-link <out>)
   (<op> ^name finished-cleaning)
-->
   (write (crlf) |All rooms are cleaned.|)
   (<out> ^stop <stop>)
   (halt)
}

sp {clean-house*compare*finished-cleaning*get-object
   (state <s> ^name robot
              ^operator <op1> +
                        <op2> +)
   (<op1> ^name finished-cleaning)
   (<op2> ^name get-object)
-->
   (<s> ^operator <op1> > <op2>)
}

sp {clean-house*compare*finished-cleaning*record-label
   (state <s> ^name robot
              ^operator <op1> +
                        <op2> +)
   (<op1> ^name finished-cleaning)
   (<op2> ^name record-label)
-->
   (<s> ^operator <op1> < <op2>)
}
