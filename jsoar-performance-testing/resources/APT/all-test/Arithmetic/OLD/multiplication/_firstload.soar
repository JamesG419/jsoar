## Arithmetic Project
##
## This program supports arithmetic, subtraction, and multiplicatoin between two multi-digit numbers. 
## It formulates the problem in multiple columns. It does not use any math functions and as currently formulated
## has tables of all single digit arithmetics, subtraction, and multiplication facts (^arithmetic.facts). 
## The hope is that this will be converted to a semantic memory access (in the application of computer-result).

## This project was created by modifying and generalizing an arithmetic project.

## John E. Laird 
## Started 7/17/2005
## Last modifications 7/17/2005

##
## Key data structures:
##   arithmetic.facts - all of the facts about single digit arithmetic
##      digit1
##      digit2
##      result - 0-9 - the single digit result 
##      carry-borrow - 0/1 if the result is 10 or greater
##   arithmetic-problem - holds the complete definition of the problem
##     columns - each column in the arithmetic problem (1, 10s, 100s, ...)
##       digit1
##       digit2
##       carry-borrow - 0/1 - based on the computation on the prior column
##       next-column - the column to the left of the current - 10x (nil if no next column)
##       result - the result of the digits and carry-borrow
##     one-column - the right-most columns where the ones are held
##     current-column - the current column being added
##
## All of the operators in this system are very simple:
## Initialize-arithmetic
##   Creates the arithmetic problem (<s> ^arithmetic-problem) 
##   Preloads working memory with all of the arithmetic facts
## process-column - compute the result for a column
##   get-digit1 - retrieve digit1 from column and move to state
##     if there is a carry-borrow, recursively add it to column digit1 to compute final digit1
##     write-digit1 - return the newly computed digit1 and possible carry-borrow (if digit1 is 9
##   get-digit2 - retrieve digit2
##   compute-result - compute result and carry-borrow of digit1 and digit2 
##   carry-borrow - transfer carry-borrow to next column
##     new-column - creates a new column if there is a carry-borrow at the left-most column
##   write-result - move result to the current-column
## Next-column - when an answer has been computed for a column, go to the next column
## Finish-problem - when there is an answer for a column with no next-column (nil) print out answer and stop
## 
