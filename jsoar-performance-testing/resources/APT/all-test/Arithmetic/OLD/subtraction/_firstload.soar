## subtraction Project
##
## This program does simple subtraction between two numbers. It formulates the problem
## in multiple columns. It does not use any math functions and as currently formulated
## has a table of all single digit subtractions (^subtraction.facts). The hope is that this will be converted
## to a semantic memory access (in the application of computer-difference).

##
## Key data structures:
##   subtraction.facts - all of the facts about single digit subtraction
##      sub1
##      sub2
##      difference - 0-9 - the single digit difference 
##      borrow - 0/1 if the difference is 10 or greater
##   subtraction-problem - holds the complete definition of the problem
##     columns - each column in the subtraction problem (1, 10s, 100s, ...)
##       sub1
##       sub2
##       borrow - 0/1 - based on the computation on the prior column
##       next-column - the column to the left of the current - 10x (nil if no next column)
##       difference - the difference of the subs and borrow
##     one-column - the right-most columns where the ones are held
##     current-column - the current column being added
##
## All of the operators in this system are very simple:
## Initialize-subtraction
##   Creates the subtraction problem (<s> ^subtraction-problem) 
##   Preloads working memory with all of the subtraction facts
## sub-column - compute the difference for a column
##   get-sub1 - retrieve sub1 from column and move to state
##     if there is a borrow, recursively add it to column sub1 to compute final sub1
##     write-sub1 - return the newly computed sub1 and possible borrow (if sub1 is 9
##   get-sub2 - retrieve sub2
##   compute-difference - compute difference and borrow of sub1 and sub2 
##   borrow - transfer borrow to next column
##     new-column - creates a new column if there is a borrow at the left-most column
##   write-difference - move difference to the current-column
## Next-column - when an answer has been computed for a column, go to the next column
## Finish-problem - when there is an answer for a column with no next-column (nil) print out answer and stop
## 
