/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.35
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sml;

import sml.connection.ErrorCode;

public class ClientErrors {
    protected ErrorCode           m_LastError = ErrorCode.kNoError;

    // Usually this will be empty, indicating that the error code is sufficient.
    // If we do set this string, it should be displayed instead of the default message
    // based on just the error code.
    protected String m_LastErrorDetail = "";
    /*
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected ClientErrors(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ClientErrors obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }
*/
  public synchronized void delete() {
      /*
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      smlJNI.delete_ClientErrors(swigCPtr);
    }
    swigCPtr = 0;
    */
  }

  public boolean HadError() {
      return m_LastError != ErrorCode.kNoError;
  }

  public String GetLastErrorDescription() {
      return m_LastErrorDetail.length() == 0 ? ErrorCode.GetErrorDescription(m_LastError) : m_LastErrorDetail;
  }

  public ClientErrors() {
    //this(smlJNI.new_ClientErrors(), true);
  }
  
  protected void ClearError()
  {
      m_LastError = ErrorCode.kNoError;
      m_LastErrorDetail = "";
  }

  /*************************************************************
  * @brief Records that an error has occurred
  *************************************************************/
  protected void SetError(ErrorCode error)
  {
      m_LastError = error;
  }

  /*************************************************************
  * @brief Records that an error has occurred and we are overriding
  *        the default message to go with it.
  *************************************************************/
  protected void SetDetailedError(ErrorCode error, String pDetailedError)
  {
      m_LastError = error;
      m_LastErrorDetail = pDetailedError;
  }
  

}
