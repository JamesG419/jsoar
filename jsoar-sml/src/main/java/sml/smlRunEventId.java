/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.35
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sml;

public enum smlRunEventId {
  smlEVENT_BEFORE_SMALLEST_STEP(smlSystemEventId.smlEVENT_LAST_SYSTEM_EVENT.swigValue() + 1),
  smlEVENT_AFTER_SMALLEST_STEP,
  smlEVENT_BEFORE_ELABORATION_CYCLE,
  smlEVENT_AFTER_ELABORATION_CYCLE,
  smlEVENT_BEFORE_PHASE_EXECUTED,
  smlEVENT_BEFORE_INPUT_PHASE,
  smlEVENT_BEFORE_PROPOSE_PHASE,
  smlEVENT_BEFORE_DECISION_PHASE,
  smlEVENT_BEFORE_APPLY_PHASE,
  smlEVENT_BEFORE_OUTPUT_PHASE,
  smlEVENT_AFTER_INPUT_PHASE,
  smlEVENT_AFTER_PROPOSE_PHASE,
  smlEVENT_AFTER_DECISION_PHASE,
  smlEVENT_AFTER_APPLY_PHASE,
  smlEVENT_AFTER_OUTPUT_PHASE,
  smlEVENT_AFTER_PHASE_EXECUTED,
  smlEVENT_BEFORE_DECISION_CYCLE,
  smlEVENT_AFTER_DECISION_CYCLE,
  smlEVENT_MAX_MEMORY_USAGE_EXCEEDED,
  smlEVENT_AFTER_INTERRUPT,
  smlEVENT_AFTER_HALTED,
  smlEVENT_BEFORE_RUN_STARTS,
  smlEVENT_AFTER_RUN_ENDS,
  smlEVENT_BEFORE_RUNNING,
  smlEVENT_AFTER_RUNNING,
  smlEVENT_LAST_RUN_EVENT(smlEVENT_AFTER_RUNNING);

  public final int swigValue() {
    return swigValue;
  }

  public static smlRunEventId swigToEnum(int swigValue) {
    smlRunEventId[] swigValues = smlRunEventId.class.getEnumConstants();
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (smlRunEventId swigEnum : swigValues)
      if (swigEnum.swigValue == swigValue)
        return swigEnum;
    throw new IllegalArgumentException("No enum " + smlRunEventId.class + " with value " + swigValue);
  }

  private smlRunEventId() {
    this.swigValue = SwigNext.next++;
  }

  private smlRunEventId(int swigValue) {
    this.swigValue = swigValue;
    SwigNext.next = swigValue+1;
  }

  private smlRunEventId(smlRunEventId swigEnum) {
    this.swigValue = swigEnum.swigValue;
    SwigNext.next = this.swigValue+1;
  }

  private final int swigValue;

  private static class SwigNext {
    private static int next = 0;
  }
}

