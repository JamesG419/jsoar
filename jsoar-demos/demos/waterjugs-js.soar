
script javascript {
  function init() {
    moves = 0;
    jugs = {
      a: { capacity: 5, contents: 0, contentsWme: null },
      b: { capacity: 3, contents: 0, contentsWme: null },
    };
  } 

  init();

  soar.onInitSoar(init);

  soar.onInput(function(e) {
    for(var name in jugs) {
      var jug = jugs[name];

      if(jug.contentsWme) {
        jug.contentsWme = soar.wmes.update(jug.contentsWme, jug.contents);
      }
      else {
        var id = soar.wmes.newId("J");
        soar.wmes.add("jug", id);
        soar.wmes.add(id, "name", name);
        soar.wmes.add(id, "capacity", jug.capacity);
        jug.contentsWme = soar.wmes.add(id, "contents", jug.contents);
      }
    }

    if(jugs.b.contents == 2) {
      soar.print("\nenv: Achieved goal in " + moves + " moves!");
      soar.agent.stop();
    }
  });

  soar.onOutputCommand("pour", function(e) {
    var from = jugs[e.from];
    var to = jugs[e.to];
    
    soar.print("\nenv: Pouring from " + e.from + " to " + e.to);

    var space = to.capacity - to.contents;
    var amount = Math.min(space, from.contents);
    to.contents += amount
    from.contents -= amount;

    moves++;
  });

  soar.onOutputCommand("fill", function(e) {
    var jug = jugs[e.jug];
    jug.contents = jug.capacity;

    soar.print("\nenv: Filling " + e.jug + " to " + jug.capacity);

    moves++;
  });

  soar.onOutputCommand("empty", function(e) {
    var jug = jugs[e.jug];
    jug.contents = 0;

    soar.print("\nenv: Emptying " + e.jug);

    moves++;
  });

  // Install a dumb RHS function just as an example
  soar.rhsFunction({ name: "say hello", execute: function(context, args) {
      soar.print("\n'say hello' RHS function called with args " + args);
      return "hi";
  }});
}

sp {test-rhs-function
  (state <s> ^superstate nil)
-->
  (<s> ^result (|say hello| 1 2 3 5 <s> |a string|))
}

source waterjugs-script.soar
