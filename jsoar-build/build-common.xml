<project name="jsoar-build-common" basedir=".">
    <description>jsoar-build-common</description>

    <property name="src" location="src/main/java" />
    <property name="lib" location="lib" />
    <property name="main.resources" location="src/main/resources" />
    <property name="test.resources" location="src/test/resources" />
    <property name="test.src" location="src/test/java" />

    <property name="target" location="target" />
    <property name="target.classes" location="${target}/classes" />
    <property name="test.classes" location="${target}/test-classes" />
    <property name="test.reports" value="${target}/test-results" />

    <property name="java.source.level" value="1.6"/>
    <property name="java.target.level" value="1.6"/>

    <property name="jar.name" value="${ant.project.name}-${version}.jar"/>
    <property name="jar.source.name" value="${ant.project.name}-${version}.src.jar"/>

    <property name="manifest.classpath" value=""/>

    <property name="doc.packagenames" value="org.jsoar.*"/>
    <property name="doc.sourcepath" location="${src}"/>
    <property name="doc.excludepackagenames" value="org.jsoar.demos.*"/>
    <property name="doc.destdir" location="${dist}/docs/${ant.project.name}/api"/>
    <property name="doc.windowtitle" value="${ant.project.name} ${version}"/>


    <target name="init" description="Create temporary build directories">
        <mkdir dir="${target}" />
        <mkdir dir="${target.classes}" />
        <mkdir dir="${test.classes}" />
        <mkdir dir="${test.reports}" />

         <path id="compile.libs.extra"/>

         <!-- Set up the build path used throughout the build script  -->
         <path id="compile.libs">
            <fileset dir="${lib}">
                <include name="*.jar" />
            </fileset>
        	<!-- Jars in lib/build-only are available at compile time, but not
        		merged into the final jar -->
            <fileset dir="${lib}/build-only" erroronmissingdir="false">
                <include name="*.jar" />
            </fileset>
            <fileset dir="${dist.lib}">
                  <include name="*.jar" />
            </fileset>
         </path>

         <path id="test.libs">
            <path refid="compile.libs" />
            <pathelement location="../jsoar-build/lib/build/junit-4.4.jar" />

         	<!-- TODO move this to jsoar-core/build.xml somehow -->
            <fileset dir="${lib}/db" erroronmissingdir="false">
                  <include name="*.jar" />
            </fileset>
         </path>

    </target>

    <target name="clean" description="Delete all temporary build files">
        <delete dir="${target}" />
    </target>

	<target name="buildinfo">
		<touch file="${target.classes}/${ant.project.name}.buildinfo.properties"/>

		<!-- Build a build info file with version and SVN revision info -->
		<propertyfile file="${target.classes}/${ant.project.name}.buildinfo.properties"
					  comment="Build information generated by build.xml">
            <entry key="${ant.project.name}.buildinfo.version" value="${version}"/>
            <entry key="${ant.project.name}.buildinfo.soarVersion" value="${soarVersion}"/>
			<entry key="${ant.project.name}.buildinfo.date"
				   type="date"
			       value="now"
			       pattern="dd/MM/yyyy HH:mm"/>
			<entry key="${ant.project.name}.buildinfo.builtBy" value="${user.name}"/>
		</propertyfile>
	</target>

    <target name="compile" depends="init" description="compile the source ">

        <javac destdir="${target.classes}" debug="on" optimize="on"
               target="${java.target.level}" source="${java.source.level}"
        	     includeAntRuntime="no">
            <src path="${src}" />
            <classpath refid="compile.libs"/>
        </javac>

        <copy todir="${target.classes}">
            <fileset dir="${main.resources}">
                <exclude name="**/.svn"/>
            </fileset>
        </copy>
    </target>

    <target name="compile-tests" depends="compile" description="compile the test sources" unless="notest">

        <javac destdir="${test.classes}" debug="on" optimize="on"
               target="${java.target.level}" source="${java.source.level}"
               includeAntRuntime="no">
            <src path="${test.src}" />
            <classpath>
               <pathelement path="${target.classes}" />
            	<path refid="test.libs"/>
            </classpath>
        </javac>

        <copy todir="${test.classes}">
            <fileset dir="${test.resources}">
                <exclude name="**/.svn"/>
            </fileset>
        </copy>
    </target>

    <target name="test" depends="compile-tests" description="Run unit tests" unless="notest">
        <junit printsummary="on" haltonfailure="yes" fork="yes" forkmode="perBatch" showoutput="true">
     	   <jvmarg value="-Xmx1536M"/>
     	   <jvmarg value="-ea"/>

            <classpath>
                <pathelement path="${target.classes}" />
                <pathelement path="${test.classes}" />
                <path refid="test.libs" />
            </classpath>

            <formatter type="xml" />

            <batchtest todir="${test.reports}">
                <fileset dir="${test.src}">
                    <include name="**/*Test.java" />
                    <include name="**/*Tests.java" />
                    <include name="**/Test*.java" />
                    <!-- TODO get rid of this -->
                	  <exclude name="org/jsoar/JSoarTest.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

	<target name="jar" depends="test,buildinfo,licenses" description="Create Jar with manifest">
        <jar destfile="${dist.lib}/${jar.name}">
            <fileset dir="${target.classes}"/>
            <zipgroupfileset dir="${lib}" includes="*.jar"/>
            <manifest>
                <attribute name="Title" value="${ant.project.name} ${version}" />
                <attribute name="Vendor" value="${manifest.vendor}" />
                <attribute name="Date" value="${TODAY} ${TSTAMP}" />
                <attribute name="Version" value="${version}" />
                <attribute name="Built-By" value="${user.name}" />
                <attribute name="Copyright" value="${copyright}" />
                <attribute name="Main-Class" value="${jar.main.class}" />
                <attribute name="Class-Path" value=". ${manifest.classpath}" />
            </manifest>
        </jar>

		<!-- Create source jar -->
		<jar destfile="${dist.lib}/${jar.source.name}">
         <fileset dir="${src}">
            <exclude name="**/.svn"/>
         </fileset>
		</jar>

    	<!-- Copy build-only jars to dist lib -->
        <copy todir="${dist.lib}" >
            <fileset dir="${lib}/build-only" erroronmissingdir="false">
                <include name="*.jar"/>
            </fileset>
        </copy>

	</target>

   <target name="licenses">
      <!-- Copy vendor license files -->
    	<mkdir dir="${dist}/licenses"/>
      <copy todir="${dist}/licenses">
         <fileset dir="${lib}">
               <include name="*.txt"/>
               <include name="*.htm"/>
         </fileset>
      </copy>
   </target>

	<target name="doc" depends="init" description="Generate API documentation" unless="nodoc">
		<javadoc packagenames="${doc.packagenames}"
		           sourcepath="${src}"
		    	   classpathref="compile.libs"
		           excludepackagenames="${doc.excludepackagenames}"
		           defaultexcludes="yes"
		           destdir="${doc.destdir}"
		           author="true"
		           version="true"
		           use="true"
		           windowtitle="${doc.windowtitle}">
		    <doctitle><![CDATA[<h1><a href="http://jsoar.googlecode.com">JSoar</a> ${version}</h1>]]></doctitle>
		    <bottom><![CDATA[<i>${copyright}</i>]]></bottom>
		    <tag name="todo" scope="all" description="Todo:"/>
		</javadoc>
	</target>
</project>
