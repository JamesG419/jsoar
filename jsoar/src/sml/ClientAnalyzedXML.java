/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.35
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sml;

public class ClientAnalyzedXML {

    private AnalyzeXML m_pAnalyzeXML = new AnalyzeXML();
    
  public synchronized void delete() {
  }

  public ClientAnalyzedXML() {
  }
  
  public AnalyzeXML GetAnalyzeXML() { return m_pAnalyzeXML ; }

  public void Attach(AnalyzeXML pAnalyzeXML) {
      m_pAnalyzeXML = pAnalyzeXML;
  }

  public ElementXML GetCommandTag() {
      return m_pAnalyzeXML.GetCommandTag();
  }

  public ElementXML GetResultTag() {
      return m_pAnalyzeXML.GetResultTag();
  }

  public ElementXML GetErrorTag() {
      return m_pAnalyzeXML.GetErrorTag();
  }

  public boolean IsSML() {
      return m_pAnalyzeXML.IsSML();
  }

  public String GetCommandName() {
      return m_pAnalyzeXML.GetCommandName();
  }

  public String GetResultString() {
      return m_pAnalyzeXML.GetResultString();
  }

  public int GetResultInt(int defaultValue) {
      return m_pAnalyzeXML.GetResultInt(defaultValue);
  }

  public boolean GetResultBool(boolean defaultValue) {
      return m_pAnalyzeXML.GetResultBool(defaultValue);
  }

  public double GetResultFloat(double defaultValue) {
      return m_pAnalyzeXML.GetResultFloat(defaultValue);
  }

  public String GenerateXMLString(boolean includeChildren, boolean insertNewLines) {
      return m_pAnalyzeXML.GenerateXMLString(includeChildren, insertNewLines);
  }

  public String GenerateXMLString(boolean includeChildren) {
      return m_pAnalyzeXML.GenerateXMLString(includeChildren);
  }

  public static void DeleteString(String pString) {
  }

  public String GetArgString(String pArgName) {
      return m_pAnalyzeXML.GetArgString(pArgName);
  }

  public boolean GetArgBool(String pArgName, boolean defaultValue) {
      return m_pAnalyzeXML.GetArgBool(pArgName, defaultValue);
  }

  public int GetArgInt(String pArgName, int defaultValue) {
      return m_pAnalyzeXML.GetArgInt(pArgName, defaultValue);
  }

  public double GetArgFloat(String pArgName, double defaultValue) {
      return m_pAnalyzeXML.GetArgFloat(pArgName, defaultValue);
  }

}
