/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.35
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sml;

public class Agent extends ClientErrors {
  private long swigCPtr;

  protected Agent(long cPtr, boolean cMemoryOwn) {
    super(smlJNI.SWIGAgentUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Agent obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      throw new UnsupportedOperationException("C++ destructor does not have public access");
    }
    swigCPtr = 0;
    super.delete();
  }

  public interface RunEventInterface {
	public void runEventHandler(int eventID, Object data, Agent agent, int phase) ;
  }

  public interface ProductionEventInterface {
     public void productionEventHandler(int eventID, Object data, Agent agent, String prodName, String instantiation) ;
  }
  
  public interface PrintEventInterface { 
  		public void printEventHandler(int eventID, Object data, Agent agent, String message) ;
  }
  
  public interface xmlEventInterface {
  		public void xmlEventHandler(int eventID, Object data, Agent agent, ClientXML xml) ;
  }

  public interface OutputEventInterface {  
  		public void outputEventHandler(Object data, String agentName, String attributeName, WMElement pWmeAdded) ;
  }
  
  public interface OutputNotificationInterface {
  		public void outputNotificationHandler(Object data, Agent agent) ;
  }

  public int RegisterForRunEvent(smlRunEventId id, RunEventInterface handlerObject, Object callbackData)
  { return smlJNI.Agent_RegisterForRunEvent(swigCPtr, id.swigValue(), this, handlerObject, callbackData) ;}
  
  public int RegisterForProductionEvent(smlProductionEventId id, ProductionEventInterface handlerObject, Object callbackData)
  { return smlJNI.Agent_RegisterForProductionEvent(swigCPtr, id.swigValue(), this, handlerObject, callbackData) ; }

  public int RegisterForPrintEvent(smlPrintEventId id, PrintEventInterface handlerObject, Object callbackData)
  { return smlJNI.Agent_RegisterForPrintEvent(swigCPtr, id.swigValue(), this, handlerObject, callbackData, true) ; }

  public int RegisterForPrintEvent(smlPrintEventId id, PrintEventInterface handlerObject, Object callbackData, boolean ignoreOwnEchos)
  { return smlJNI.Agent_RegisterForPrintEvent(swigCPtr, id.swigValue(), this, handlerObject, callbackData, ignoreOwnEchos) ; }

  public int RegisterForXMLEvent(smlXMLEventId id, xmlEventInterface handlerObject, Object callbackData)
  { return smlJNI.Agent_RegisterForXMLEvent(swigCPtr, id.swigValue(), this, handlerObject, callbackData) ; }
  
  public int RegisterForOutputNotification(OutputNotificationInterface handlerObject, Object callbackData)
  { return smlJNI.Agent_RegisterForOutputNotification(swigCPtr, this, handlerObject, callbackData) ;}

  public boolean UnregisterForOutputNotification(int callbackReturnValue)
  { return smlJNI.Agent_UnregisterForOutputNotification(swigCPtr, callbackReturnValue) ;}

  public boolean UnregisterForRunEvent(int callbackReturnValue)
  { return smlJNI.Agent_UnregisterForRunEvent(swigCPtr, callbackReturnValue) ;}

  public boolean UnregisterForProductionEvent(int callbackReturnValue)
  { return smlJNI.Agent_UnregisterForProductionEvent(swigCPtr, callbackReturnValue) ;}

  public boolean UnregisterForPrintEvent(int callbackReturnValue)
  { return smlJNI.Agent_UnregisterForPrintEvent(swigCPtr, callbackReturnValue) ;}

  public boolean UnregisterForXMLEvent(int callbackReturnValue)
  { return smlJNI.Agent_UnregisterForXMLEvent(swigCPtr, callbackReturnValue) ;}

  public int AddOutputHandler(String attributeName, OutputEventInterface handlerObject, Object callbackData)
  { return smlJNI.Agent_AddOutputHandler(swigCPtr, attributeName, this, handlerObject, callbackData) ; }

  public boolean RemoveOutputHandler(int callbackReturnValue)
  { return smlJNI.Agent_RemoveOutputHandler(swigCPtr, callbackReturnValue) ;}

  public String GetAgentName() {
    return smlJNI.Agent_GetAgentName(swigCPtr, this);
  }

  public Kernel GetKernel() {
    long cPtr = smlJNI.Agent_GetKernel(swigCPtr, this);
    return (cPtr == 0) ? null : new Kernel(cPtr, false);
  }

  public int GenerateNewVisitedCounter() {
    return smlJNI.Agent_GenerateNewVisitedCounter(swigCPtr, this);
  }

  public boolean LoadProductions(String pFilename, boolean echoResults) {
    return smlJNI.Agent_LoadProductions__SWIG_0(swigCPtr, this, pFilename, echoResults);
  }

  public boolean LoadProductions(String pFilename) {
    return smlJNI.Agent_LoadProductions__SWIG_1(swigCPtr, this, pFilename);
  }

  public Identifier GetInputLink() {
    long cPtr = smlJNI.Agent_GetInputLink(swigCPtr, this);
    return (cPtr == 0) ? null : new Identifier(cPtr, false);
  }

  public Identifier GetILink() {
    long cPtr = smlJNI.Agent_GetILink(swigCPtr, this);
    return (cPtr == 0) ? null : new Identifier(cPtr, false);
  }

  public Identifier GetOutputLink() {
    long cPtr = smlJNI.Agent_GetOutputLink(swigCPtr, this);
    return (cPtr == 0) ? null : new Identifier(cPtr, false);
  }

  public StringElement CreateStringWME(Identifier parent, String pAttribute, String pValue) {
    long cPtr = smlJNI.Agent_CreateStringWME(swigCPtr, this, Identifier.getCPtr(parent), parent, pAttribute, pValue);
    return (cPtr == 0) ? null : new StringElement(cPtr, false);
  }

  public IntElement CreateIntWME(Identifier parent, String pAttribute, int value) {
    long cPtr = smlJNI.Agent_CreateIntWME(swigCPtr, this, Identifier.getCPtr(parent), parent, pAttribute, value);
    return (cPtr == 0) ? null : new IntElement(cPtr, false);
  }

  public FloatElement CreateFloatWME(Identifier parent, String pAttribute, double value) {
    long cPtr = smlJNI.Agent_CreateFloatWME(swigCPtr, this, Identifier.getCPtr(parent), parent, pAttribute, value);
    return (cPtr == 0) ? null : new FloatElement(cPtr, false);
  }

  public Identifier CreateIdWME(Identifier parent, String pAttribute) {
    long cPtr = smlJNI.Agent_CreateIdWME(swigCPtr, this, Identifier.getCPtr(parent), parent, pAttribute);
    return (cPtr == 0) ? null : new Identifier(cPtr, false);
  }

  public Identifier CreateSharedIdWME(Identifier parent, String pAttribute, Identifier pSharedValue) {
    long cPtr = smlJNI.Agent_CreateSharedIdWME(swigCPtr, this, Identifier.getCPtr(parent), parent, pAttribute, Identifier.getCPtr(pSharedValue), pSharedValue);
    return (cPtr == 0) ? null : new Identifier(cPtr, false);
  }

  public void Update(StringElement pWME, String pValue) {
    smlJNI.Agent_Update__SWIG_0(swigCPtr, this, StringElement.getCPtr(pWME), pWME, pValue);
  }

  public void Update(IntElement pWME, int value) {
    smlJNI.Agent_Update__SWIG_1(swigCPtr, this, IntElement.getCPtr(pWME), pWME, value);
  }

  public void Update(FloatElement pWME, double value) {
    smlJNI.Agent_Update__SWIG_2(swigCPtr, this, FloatElement.getCPtr(pWME), pWME, value);
  }

  public void SetBlinkIfNoChange(boolean state) {
    smlJNI.Agent_SetBlinkIfNoChange(swigCPtr, this, state);
  }

  public boolean IsBlinkIfNoChange() {
    return smlJNI.Agent_IsBlinkIfNoChange(swigCPtr, this);
  }

  public boolean DestroyWME(WMElement pWME) {
    return smlJNI.Agent_DestroyWME(swigCPtr, this, WMElement.getCPtr(pWME), pWME);
  }

  public String InitSoar() {
    return smlJNI.Agent_InitSoar(swigCPtr, this);
  }

  public int GetNumberOutputLinkChanges() {
    return smlJNI.Agent_GetNumberOutputLinkChanges(swigCPtr, this);
  }

  public WMElement GetOutputLinkChange(int index) {
    long cPtr = smlJNI.Agent_GetOutputLinkChange(swigCPtr, this, index);
    return (cPtr == 0) ? null : new WMElement(cPtr, false);
  }

  public boolean IsOutputLinkChangeAdd(int index) {
    return smlJNI.Agent_IsOutputLinkChangeAdd(swigCPtr, this, index);
  }

  public void ClearOutputLinkChanges() {
    smlJNI.Agent_ClearOutputLinkChanges(swigCPtr, this);
  }

  public int GetNumberCommands() {
    return smlJNI.Agent_GetNumberCommands(swigCPtr, this);
  }

  public boolean Commands() {
    return smlJNI.Agent_Commands(swigCPtr, this);
  }

  public Identifier GetCommand(int index) {
    long cPtr = smlJNI.Agent_GetCommand(swigCPtr, this, index);
    return (cPtr == 0) ? null : new Identifier(cPtr, false);
  }

  public boolean Commit() {
    return smlJNI.Agent_Commit(swigCPtr, this);
  }

  public boolean IsCommitRequired() {
    return smlJNI.Agent_IsCommitRequired(swigCPtr, this);
  }

  public String RunSelf(long numberSteps, smlRunStepSize stepSize) {
    return smlJNI.Agent_RunSelf__SWIG_0(swigCPtr, this, numberSteps, stepSize.swigValue());
  }

  public String RunSelf(long numberSteps) {
    return smlJNI.Agent_RunSelf__SWIG_1(swigCPtr, this, numberSteps);
  }

  public String RunSelfForever() {
    return smlJNI.Agent_RunSelfForever(swigCPtr, this);
  }

  public String RunSelfTilOutput() {
    return smlJNI.Agent_RunSelfTilOutput(swigCPtr, this);
  }

  public boolean WasAgentOnRunList() {
    return smlJNI.Agent_WasAgentOnRunList(swigCPtr, this);
  }

  public smlRunResult GetResultOfLastRun() {
    return smlRunResult.swigToEnum(smlJNI.Agent_GetResultOfLastRun(swigCPtr, this));
  }

  public String StopSelf() {
    return smlJNI.Agent_StopSelf(swigCPtr, this);
  }

  public void Refresh() {
    smlJNI.Agent_Refresh(swigCPtr, this);
  }

  public smlPhase GetCurrentPhase() {
    return smlPhase.swigToEnum(smlJNI.Agent_GetCurrentPhase(swigCPtr, this));
  }

  public int GetDecisionCycleCounter() {
    return smlJNI.Agent_GetDecisionCycleCounter(swigCPtr, this);
  }

  public smlRunState GetRunState() {
    return smlRunState.swigToEnum(smlJNI.Agent_GetRunState(swigCPtr, this));
  }

  public String ExecuteCommandLine(String pCommandLine, boolean echoResults, boolean noFilter) {
    return smlJNI.Agent_ExecuteCommandLine__SWIG_0(swigCPtr, this, pCommandLine, echoResults, noFilter);
  }

  public String ExecuteCommandLine(String pCommandLine, boolean echoResults) {
    return smlJNI.Agent_ExecuteCommandLine__SWIG_1(swigCPtr, this, pCommandLine, echoResults);
  }

  public String ExecuteCommandLine(String pCommandLine) {
    return smlJNI.Agent_ExecuteCommandLine__SWIG_2(swigCPtr, this, pCommandLine);
  }

  public boolean ExecuteCommandLineXML(String pCommandLine, ClientAnalyzedXML pResponse) {
    return smlJNI.Agent_ExecuteCommandLineXML(swigCPtr, this, pCommandLine, ClientAnalyzedXML.getCPtr(pResponse), pResponse);
  }

  public boolean GetLastCommandLineResult() {
    return smlJNI.Agent_GetLastCommandLineResult(swigCPtr, this);
  }

  public boolean IsProductionLoaded(String pProductionName) {
    return smlJNI.Agent_IsProductionLoaded(swigCPtr, this, pProductionName);
  }

  public boolean SynchronizeInputLink() {
    return smlJNI.Agent_SynchronizeInputLink(swigCPtr, this);
  }

  public boolean SynchronizeOutputLink() {
    return smlJNI.Agent_SynchronizeOutputLink(swigCPtr, this);
  }

}
