/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.35
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sml;

public class ClientXML {
    protected ElementXML m_pElementXML;

  public synchronized void delete() {
  }

  public ClientXML() {
  }

  public ClientXML(ClientXML pXML) {
      this.m_pElementXML = pXML.m_pElementXML;
  }
  

  public ClientTraceXML ConvertToTraceXML() {
      return (ClientTraceXML) this;
  }

  public String GetTagName() {
      return m_pElementXML.GetTagName();
  }

  public boolean IsTag(String pTagName) {
      return m_pElementXML.IsTag(pTagName);
  }

  public int GetNumberChildren() {
      return m_pElementXML.GetNumberChildren();
  }

  public boolean GetChild(ClientXML pChild, int index) {
      // If we're reusing a child object delete what it used to contain
      if (pChild.m_pElementXML != null)
      {
          pChild.m_pElementXML = null ;
      }

      // Retrieve the child and attach it to the pChild object we were passed.
      ElementXML pXML = new ElementXML() ;
      boolean ok = m_pElementXML.GetChild(pXML, index) ;

      if (ok)
      {
          pChild.m_pElementXML = pXML ;
      }
      else
      {
          // delete pXML ;
      }

      return ok ;
  }

  public int GetNumberAttributes() {
      return m_pElementXML.GetNumberAttributes();
  }

  public String GetAttributeName(int index) {
      return m_pElementXML.GetAttributeName(index);
  }

  public String GetAttributeValue(int index) {
      return m_pElementXML.GetAttributeValue(index);
  }

  public String GetAttribute(String attName) {
      return m_pElementXML.GetAttribute(attName);
  }

  public String GetCharacterData() {
      return m_pElementXML.GetCharacterData();
  }

  public boolean IsCharacterDataBinary() {
      return m_pElementXML.IsCharacterDataBinary();
  }

  public boolean ConvertCharacterDataToBinary() {
      return m_pElementXML.ConvertCharacterDataToBinary();
  }

  public int GetCharacterDataLength() {
      return m_pElementXML.GetCharacterDataLength();
  }

  public String GenerateXMLString(boolean includeChildren, boolean insertNewLines) {
      return m_pElementXML.GenerateXMLString(includeChildren, insertNewLines);
  }

  public String GenerateXMLString(boolean includeChildren) {
      return m_pElementXML.GenerateXMLString(includeChildren);
  }

  public int DetermineXMLStringLength(boolean includeChildren, boolean insertNewLines) {
      return m_pElementXML.DetermineXMLStringLength(includeChildren, insertNewLines);
  }

  public int DetermineXMLStringLength(boolean includeChildren) {
      return m_pElementXML.DetermineXMLStringLength(includeChildren);
  }

  public static String AllocateString(int length) {
      return ElementXML.AllocateString(length);
  }

  public static void DeleteString(String pString) {
      ElementXML.DeleteString(pString);
  }

  public static String CopyString(String original) {
      return ElementXML.CopyString(original);
  }

  public static String CopyBuffer(String original, int length) {
      return ElementXML.CopyBuffer(original, length);
  }

}
